name: Psalm Static analysis

on:
  pull_request:
  push:
    branches:
      - "[0-9]+.[0-9]+.x"
  # Allow manually triggering the workflow.
  workflow_dispatch:

concurrency:
  group: psalm-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  psalm:
    name: Psalm
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cba0d00b1fc9a034e1e642ea0f1103c282990604 # v2.5.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Set up php
        uses: shivammathur/setup-php@72ae4ccbe57f82bbe08411e84e2130bd4ba1c10f # v2
        with:
          php-version: 7.3
          coverage: pcov
          ini-values: assert.exception=1, zend.assertions=1, error_reporting=-1, log_errors_max_len=0, display_errors=On

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        run: |
          composerCommand="install"
          composerOptions=("--no-interaction" "--no-progress" "--ansi")
          # Use `update` if there is no composer.lock file
          if [ ! -f "composer.lock" ]; then
            composerCommand="update"
          fi
          fullCommand="composer ${composerCommand} ${composerOptions[*]}"
          echo "Running: ${fullCommand}"
          ${fullCommand}

      - name: Run Psalm
        run: composer psalm
