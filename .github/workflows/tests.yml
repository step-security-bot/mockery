name: Tests

on:
  pull_request:
  push:
    branches:
      - "[0-9]+.[0-9]+.x"
  # Allow manually triggering the workflow.
  workflow_dispatch:

permissions:
  contents: read

jobs:
  phpunit:
    name: PHPUnit on PHP ${{ matrix.php }} with ${{ matrix.dependencies }} Dependencies
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: ['7.3', '7.4', '8.0', '8.1', '8.2', '8.3']
        dependencies: ['lowest','highest','locked']
        dev: ['8.3']

    continue-on-error: ${{ matrix.php == matrix.dev || matrix.dependencies == 'lowest' }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cba0d00b1fc9a034e1e642ea0f1103c282990604 # v2.5.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@72ae4ccbe57f82bbe08411e84e2130bd4ba1c10f # v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: assert.exception=1, zend.assertions=1, error_reporting=-1, log_errors_max_len=0, display_errors=On
          tools: composer:v2
          extensions: mongodb, redis
          coverage: pcov

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup Problem Matchers
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ matrix.dependencies }}-

      - name: Install ${{ matrix.dependencies }} dependencies
        working-directory: ${{ github.workspace }}
        run: |
          composerDependency="${{ matrix.dependencies }}"
          composerCommand="update"
          composerOptions=("--no-interaction" "--no-progress" "--ansi")
          case ${composerDependency} in
              highest) composerCommand="update" ;;
              lowest) composerOptions+=("--prefer-lowest" "--prefer-stable") ;;
              *) composerCommand="install" ;;
          esac
          # Use `update` if there is no composer.lock file
          if [ ! -f "composer.lock" ]; then
            composerCommand="update"
          fi
          fullCommand="composer ${composerCommand} ${composerOptions[*]}"
          echo "Running: ${fullCommand}"
          ${fullCommand}

      - name: Execute PHPUnit
        run: composer phpunit
